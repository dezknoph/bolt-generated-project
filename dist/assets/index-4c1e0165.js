(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const a of s)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(s){const a={};return s.integrity&&(a.integrity=s.integrity),s.referrerPolicy&&(a.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?a.credentials="include":s.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(s){if(s.ep)return;s.ep=!0;const a=t(s);fetch(s.href,a)}})();class h{constructor(){this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.cameraOffset=new THREE.Vector3(0,3,-5),this.cameraLookOffset=new THREE.Vector3(0,0,2),this.cameraSmoothness=.1,this.moveForward=!1,this.moveBackward=!1,this.moveLeft=!1,this.moveRight=!1,this.isJumping=!1,this.isPushing=!1,this.velocity=new THREE.Vector3,this.score=0,this.skateboard=null,this.skater=null,this.init()}init(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.shadowMap.enabled=!0,document.getElementById("game").appendChild(this.renderer.domElement),this.scene.background=new THREE.Color(8900331);const e=new THREE.AmbientLight(16777215,.6);this.scene.add(e);const t=new THREE.DirectionalLight(16777215,.8);t.position.set(10,20,10),t.castShadow=!0,t.shadow.camera.far=50,t.shadow.mapSize.width=2048,t.shadow.mapSize.height=2048,this.scene.add(t),this.createSkatepark(),this.createSkater(),this.setupControls(),this.animate()}createSkater(){const e=new THREE.Group,t=new THREE.BoxGeometry(.8,.1,2),i=new THREE.MeshStandardMaterial({color:4859648,roughness:.6});this.skateboard=new THREE.Mesh(t,i),this.skateboard.castShadow=!0,e.add(this.skateboard);const s=new THREE.CylinderGeometry(.1,.1,.1),a=new THREE.MeshStandardMaterial({color:0,roughness:.4});for(let n=0;n<4;n++){const r=new THREE.Mesh(s,a);r.rotation.z=Math.PI/2,r.position.x=n<2?.3:-.3,r.position.z=n%2===0?.7:-.7,r.position.y=-.1,r.castShadow=!0,this.skateboard.add(r)}const o=new THREE.CapsuleGeometry(.3,1,4,8),c=new THREE.MeshStandardMaterial({color:2254540});this.skater=new THREE.Mesh(o,c),this.skater.position.y=.8,this.skater.castShadow=!0,e.add(this.skater),e.position.y=.3,this.scene.add(e),this.skateboard=e}updateCamera(){const e=this.cameraOffset.clone();e.applyQuaternion(this.skateboard.quaternion),e.add(this.skateboard.position);const t=this.cameraLookOffset.clone();t.applyQuaternion(this.skateboard.quaternion),t.add(this.skateboard.position),this.camera.position.lerp(e,this.cameraSmoothness),this.camera.lookAt(t)}animate(){requestAnimationFrame(()=>this.animate()),TWEEN.update(),this.update(),this.updateCamera(),this.renderer.render(this.scene,this.camera)}adjustCameraDistance(e){this.cameraOffset.z+=e,this.cameraOffset.z=Math.max(-10,Math.min(-2,this.cameraOffset.z))}setupControls(){document.addEventListener("wheel",t=>{this.adjustCameraDistance(Math.sign(t.deltaY)*.5)});let e=0;document.addEventListener("touchstart",t=>{e=t.touches[0].clientY}),document.addEventListener("touchmove",t=>{const i=t.touches[0].clientY,s=(i-e)*.01;this.adjustCameraDistance(s),e=i})}}new h;
